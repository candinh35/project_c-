// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Core;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Model.Core.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20250214033254_InitProject")]
    partial class InitProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.Core.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiry_date");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_revoked");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("create_date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date");

                    b.Property<Guid>("create_user")
                        .HasColumnType("uuid")
                        .HasColumnName("create_user");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean")
                        .HasColumnName("del_flg");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date");

                    b.Property<Guid?>("update_user")
                        .HasColumnType("uuid")
                        .HasColumnName("update_user");

                    b.HasKey("id");

                    b.ToTable("refresh_tokens");
                });

            modelBuilder.Entity("Model.Core.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("create_date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date");

                    b.Property<Guid>("create_user")
                        .HasColumnType("uuid")
                        .HasColumnName("create_user");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean")
                        .HasColumnName("del_flg");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date");

                    b.Property<Guid?>("update_user")
                        .HasColumnType("uuid")
                        .HasColumnName("update_user");

                    b.HasKey("id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
